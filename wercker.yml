build:
  box: mhart/alpine-node:6.4
  steps:
    - npm-install
    - npm-test
    - script:
        name: echo nodejs information
        code: |
          echo "node version $(node -v) running"
          echo "npm version $(npm -v) running"
    - script:
        name: copy artifact
        code: cp -r src node_modules package.json VERSION.txt "$WERCKER_OUTPUT_DIR"

docker-push:
  box: mhart/alpine-node:6.4
  steps:
    - script:
        name: git sha version info
        code: |
          echo ${WERCKER_GIT_COMMIT:0:7} > VERSION.txt
          echo "version info..."
          cat VERSION.txt
    - internal/docker-scratch-push:
        username: _json_key
        password: $GCR_JSON_KEY_FILE
        repository: gcr.io/swarm-sandbox/jbaas
        registry: https://gcr.io
        tag: ${WERCKER_GIT_COMMIT}
        env: "PORT=8080"
        ports: "8080"
        cmd: "npm start"
    - internal/docker-scratch-push:
        username: $DOCKERCLOUD_USERNAME
        password: $DOCKERCLOUD_PASSWORD
        repository: naartjie/jbaas
        registry: https://registry.hub.docker.com/v2
        tag: ${WERCKER_GIT_COMMIT}
        env: "PORT=8080"
        ports: "8080"
        cmd: "npm start"

rolling-update:
  - kubectl:
      server: $K8S_MASTER
      username: _json_key
      password: $GCR_JSON_KEY_FILE
      insecure-skip-tls-verify: true
      command: rolling-update jbaas
      image: gcr.io/swarm-sandbox/jbaas:$WERCKER_GIT_COMMIT

box:
    id: mhart/alpine-node:6.4
    cmd: /bin/sh

build:
  steps:
    - npm-install
    - npm-test
    - script:
        name: echo nodejs information
        code: |
          echo "node version $(node -v) running"
          echo "npm version $(npm -v) running"
    - script:
        name: copy artifact
        code: cp -r src node_modules package.json VERSION.txt "$WERCKER_OUTPUT_DIR"

docker-push:
  steps:
    - script:
        name: git sha version info
        code: |
          echo ${WERCKER_GIT_COMMIT:0:7} > VERSION.txt
          echo "version info..."
          cat VERSION.txt
    - internal/docker-push:
        disable-sync: true
        username: _json_key
        password: $GCR_JSON_KEY_FILE
        repository: gcr.io/swarm-sandbox/jbaas
        registry: https://gcr.io
        tag: ${WERCKER_GIT_COMMIT},${WERCKER_GIT_COMMIT:0:7},latest
        working-dir: /pipeline/source
        env: "PORT=8080"
        ports: "8080"
        cmd: "npm start"
    - internal/docker-push:
        disable-sync: true
        username: $DOCKERCLOUD_USERNAME
        password: $DOCKERCLOUD_PASSWORD
        repository: naartjie/jbaas
        registry: https://registry.hub.docker.com/v2
        tag: ${WERCKER_GIT_COMMIT},${WERCKER_GIT_COMMIT:0:7},latest
        working-dir: /pipeline/source
        env: "PORT=8080"
        ports: "8080"
        cmd: "npm start"

rolling-update:
  steps:
    - kubectl:
        server: $K8S_MASTER
        username: $K8S_USERNAME
        password: $K8S_PASSWORD
        insecure-skip-tls-verify: true
        command: set image deployment/jbaas jbaas=gcr.io/swarm-sandbox/jbaas:$WERCKER_GIT_COMMIT
        # password: $GCR_JSON_KEY_FILE
        # username: _json_key
        # command: rolling-update jbaas
        # image: gcr.io/swarm-sandbox/jbaas:$WERCKER_GIT_COMMIT
